<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{E6D909C7-8611-4B4F-9639-7E44FF52D708}</ProjectGuid>
    <OutputType>WinExe</OutputType>
    <RootNamespace>Viramate</RootNamespace>
    <AssemblyName>Viramate</AssemblyName>
    <TargetFrameworkVersion>v4.6</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Prefer32Bit>false</Prefer32Bit>
    <LangVersion>latest</LangVersion>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'">
    <OutputPath>bin\</OutputPath>
  </PropertyGroup>
  <PropertyGroup />
  <PropertyGroup>
    <StartupObject />
  </PropertyGroup>
  <PropertyGroup>
    <ApplicationIcon>icon.ico</ApplicationIcon>
  </PropertyGroup>
  <PropertyGroup>
    <RunPostBuildEvent>Always</RunPostBuildEvent>
  </PropertyGroup>
  <PropertyGroup />
  <PropertyGroup />
  <PropertyGroup>
    <NoWin32Manifest>true</NoWin32Manifest>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=11.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>packages\Newtonsoft.Json.11.0.1\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.IO.Compression" />
    <Reference Include="System.Net.Http" />
    <COMReference Include="NetFwTypeLib">
      <Guid>{58FBCF7C-E7A9-467C-80B3-FC65E8FCCA08}</Guid>
      <VersionMajor>1</VersionMajor>
      <VersionMinor>0</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>tlbimp</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Commands.cs" />
    <Compile Include="Program.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="WebSocketServer.cs" />
    <EmbeddedResource Include="nmh.json" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Help\index.html" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Help\install.gif" />
    <Content Include="icon.ico" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="AfterResolveReferences">
    <ItemGroup>
      <EmbeddedResource Include="@(ReferenceCopyLocalPaths)" Condition="'%(ReferenceCopyLocalPaths.Extension)' == '.dll'">
        <LogicalName>%(ReferenceCopyLocalPaths.DestinationSubDirectory)%(ReferenceCopyLocalPaths.Filename)%(ReferenceCopyLocalPaths.Extension)</LogicalName>
      </EmbeddedResource>
    </ItemGroup>
  </Target>
  <PropertyGroup>
    <PostBuildEvent>del "$(TargetDir)*.dll"
del "$(TargetDir)*.xml"
"$(TargetDir)..\third-party\7za.exe" a "$(TargetDir)..\built\installer.zip" "$(TargetDir)*"
"$(TargetDir)..\third-party\7za.exe" a "$(TargetDir)..\built\manager.zip" "$(TargetDir)..\chromeapp\*"
"$(TargetDir)..\third-party\7za.exe" a "$(TargetDir)..\built\setup.7z" "$(TargetDir)*" "$(TargetDir)..\sfx-bootstrap.bat"
copy /b "$(TargetDir)..\third-party\7zS.sfx" + "$(TargetDir)..\sfx-config.txt" + "$(TargetDir)..\built\setup.7z" "$(TargetDir)..\built\ViramateSetup.exe"
del "$(TargetDir)..\built\setup.7z"</PostBuildEvent>
    <PreBuildEvent>del "$(TargetDir)*.old"
del "$(TargetDir)..\built\installer.zip"
del "$(TargetDir)..\built\manager.zip"
del "$(TargetDir)..\built\setup.7z"
del "$(TargetDir)..\built\ViramateSetup.exe"</PreBuildEvent>
  </PropertyGroup>
</Project>